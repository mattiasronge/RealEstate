{"remainingRequest":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/babel-loader/lib/index.js!/Users/mattiasronge/Desktop/richar/Admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mattiasronge/Desktop/richar/Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mattiasronge/Desktop/richar/Admin/node_modules/vuejs-smart-table/src/VTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/vuejs-smart-table/src/VTable.vue","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.is-nan\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _typeof from \"/Users/mattiasronge/Desktop/richar/Admin/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\nimport { doFilter, doSort, calculateTotalPages, doPaginate } from \"./table-utils\";\nimport store from \"./store\";\nimport Vue from 'vue';\nexport default {\n  name: 'SmartTable',\n  props: {\n    data: {\n      required: true,\n      type: Array\n    },\n    filters: {\n      required: false,\n      type: Object\n    },\n    currentPage: {\n      required: false,\n      type: Number\n    },\n    pageSize: {\n      required: false,\n      type: Number\n    },\n    allowSelection: {\n      required: false,\n      type: Boolean,\n      default: false\n    },\n    selectionMode: {\n      required: false,\n      type: String,\n      default: 'single'\n    },\n    selectedClass: {\n      required: false,\n      type: String,\n      default: 'vt-selected'\n    },\n    customSelection: {\n      required: false,\n      type: Boolean\n    },\n    hideSortIcons: {\n      required: false,\n      type: Boolean\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    this.store = new Vue(store);\n  },\n  provide: function provide() {\n    return {\n      store: this.store\n    };\n  },\n  data: function data() {\n    return {\n      state: this.store._data,\n      initialLoad: false\n    };\n  },\n  computed: {\n    needsPaginationReset: function needsPaginationReset() {\n      return this.currentPage > this.totalPages;\n    },\n    filteredData: function filteredData() {\n      if (this.data.length === 0) {\n        return [];\n      }\n\n      if (_typeof(this.filters) !== 'object') {\n        return this.data;\n      }\n\n      return doFilter(this.data, this.filters);\n    },\n    totalItems: function totalItems() {\n      return this.filteredData.length;\n    },\n    sortedData: function sortedData() {\n      if ((this.state.sortKey || this.state.customSort) && this.state.sortOrder !== 0) {\n        return doSort(this.filteredData, this.state.sortKey, this.state.customSort, this.state.sortOrder);\n      }\n\n      return this.filteredData;\n    },\n    totalPages: function totalPages() {\n      if (!this.pageSize) return 0;\n      return calculateTotalPages(this.totalItems, this.pageSize);\n    },\n    displayData: function displayData() {\n      if (this.pageSize) {\n        return doPaginate(this.sortedData, this.pageSize, this.currentPage);\n      }\n\n      return this.sortedData;\n    },\n    selectedRows: function selectedRows() {\n      return this.state.selectedRows;\n    }\n  },\n  watch: {\n    displayData: {\n      handler: function handler() {\n        if (!this.initialLoad) {\n          this.initialLoad = true;\n          this.$emit('loaded', this);\n        }\n      },\n      immediate: true\n    },\n    selectionMode: {\n      handler: function handler(mode) {\n        this.state.selectionMode = mode;\n      },\n      immediate: true\n    },\n    selectedClass: {\n      handler: function handler(selectedClass) {\n        this.state.selectedClass = selectedClass;\n      },\n      immediate: true\n    },\n    customSelection: {\n      handler: function handler(customSelection) {\n        this.state.customSelection = customSelection;\n      },\n      immediate: true\n    },\n    hideSortIcons: {\n      handler: function handler(hideSortIcons) {\n        this.state.hideSortIcons = hideSortIcons;\n      },\n      immediate: true\n    },\n    needsPaginationReset: {\n      handler: function handler(needsReset) {\n        if (needsReset) {\n          this.$emit('update:currentPage', 1);\n        }\n      },\n      immediate: true\n    },\n    totalPages: {\n      handler: function handler(totalPages) {\n        this.$emit('totalPagesChanged', totalPages);\n      },\n      immediate: true\n    },\n    totalItems: {\n      handler: function handler(totalItems) {\n        this.$emit('totalItemsChanged', totalItems);\n      },\n      immediate: true\n    },\n    selectedRows: {\n      handler: function handler(selected) {\n        this.$emit('selectionChanged', selected);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    revealItem: function revealItem(item) {\n      if (!this.pageSize) {\n        return true;\n      }\n\n      var index;\n\n      if (typeof item === 'function') {\n        index = this.sortedData.findIndex(item);\n      } else {\n        index = this.sortedData.indexOf(item);\n      }\n\n      if (index === -1) {\n        return false;\n      }\n\n      var currentPage = Math.ceil((index + 1) / this.pageSize);\n      this.$emit('update:currentPage', currentPage);\n      return true;\n    },\n    revealPage: function revealPage(page) {\n      if (!this.pageSize || Number.isNaN(page) || page < 1) {\n        return;\n      }\n\n      this.$emit('update:currentPage', page);\n    },\n    selectRow: function selectRow(row) {\n      this.store.selectRow(row);\n    },\n    selectRows: function selectRows(rows) {\n      this.store.selectRows(rows);\n    },\n    deselectRow: function deselectRow(row) {\n      this.store.deselectRow(row);\n    },\n    deselectRows: function deselectRows(rows) {\n      this.store.deselectRows(rows);\n    },\n    selectAll: function selectAll() {\n      if (this.selectionMode === 'single') return;\n      this.store.selectAll(this.data);\n    },\n    deselectAll: function deselectAll() {\n      this.store.deselectAll();\n    }\n  }\n};",{"version":3,"sources":["VTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <table>\n    <slot name=\"head\"/>\n    <slot name=\"body\" :displayData=\"displayData\"/>\n  </table>\n</template>\n\n<script>\nimport { doFilter, doSort, calculateTotalPages, doPaginate } from './table-utils'\nimport store from './store'\nimport Vue from 'vue'\n\nexport default {\n  name: 'SmartTable',\n  props: {\n    data: {\n      required: true,\n      type: Array\n    },\n    filters: {\n      required: false,\n      type: Object\n    },\n    currentPage: {\n      required: false,\n      type: Number\n    },\n    pageSize: {\n      required: false,\n      type: Number\n    },\n    allowSelection: {\n      required: false,\n      type: Boolean,\n      default: false\n    },\n    selectionMode: {\n      required: false,\n      type: String,\n      default: 'single'\n    },\n    selectedClass: {\n      required: false,\n      type: String,\n      default: 'vt-selected'\n    },\n    customSelection: {\n      required: false,\n      type: Boolean\n    },\n    hideSortIcons: {\n      required: false,\n      type: Boolean\n    }\n  },\n  beforeCreate () {\n    this.store = new Vue(store)\n  },\n  provide () {\n    return {\n      store: this.store\n    }\n  },\n  data () {\n    return {\n      state: this.store._data,\n      initialLoad: false\n    }\n  },\n  computed: {\n    needsPaginationReset () {\n      return this.currentPage > this.totalPages\n    },\n    filteredData () {\n      if (this.data.length === 0) {\n        return []\n      }\n\n      if (typeof this.filters !== 'object') {\n        return this.data\n      }\n\n      return doFilter(this.data, this.filters)\n    },\n    totalItems () {\n      return this.filteredData.length\n    },\n    sortedData () {\n      if ((this.state.sortKey || this.state.customSort) && this.state.sortOrder !== 0) {\n        return doSort(this.filteredData, this.state.sortKey, this.state.customSort, this.state.sortOrder)\n      }\n\n      return this.filteredData\n    },\n    totalPages () {\n      if (!this.pageSize) return 0\n\n      return calculateTotalPages(this.totalItems, this.pageSize)\n    },\n    displayData () {\n      if (this.pageSize) {\n        return doPaginate(this.sortedData, this.pageSize, this.currentPage)\n      }\n\n      return this.sortedData\n    },\n    selectedRows () {\n      return this.state.selectedRows\n    }\n  },\n  watch: {\n    displayData: {\n      handler () {\n        if (!this.initialLoad) {\n          this.initialLoad = true\n          this.$emit('loaded', this)\n        }\n      },\n      immediate: true\n    },\n    selectionMode: {\n      handler (mode) {\n        this.state.selectionMode = mode\n      },\n      immediate: true\n    },\n    selectedClass: {\n      handler (selectedClass) {\n        this.state.selectedClass = selectedClass\n      },\n      immediate: true\n    },\n    customSelection: {\n      handler (customSelection) {\n        this.state.customSelection = customSelection\n      },\n      immediate: true\n    },\n    hideSortIcons: {\n      handler (hideSortIcons) {\n        this.state.hideSortIcons = hideSortIcons\n      },\n      immediate: true\n    },\n    needsPaginationReset: {\n      handler (needsReset) {\n        if (needsReset) {\n          this.$emit('update:currentPage', 1)\n        }\n      },\n      immediate: true\n    },\n    totalPages: {\n      handler (totalPages) {\n        this.$emit('totalPagesChanged', totalPages)\n      },\n      immediate: true\n    },\n    totalItems: {\n      handler (totalItems) {\n        this.$emit('totalItemsChanged', totalItems)\n      },\n      immediate: true\n    },\n    selectedRows: {\n      handler (selected) {\n        this.$emit('selectionChanged', selected)\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    revealItem (item) {\n      if (!this.pageSize) {\n        return true\n      }\n\n      let index\n      if (typeof item === 'function') {\n        index = this.sortedData.findIndex(item)\n      } else {\n        index = this.sortedData.indexOf(item)\n      }\n\n      if (index === -1) {\n        return false\n      }\n\n      const currentPage = Math.ceil((index + 1) / this.pageSize)\n      this.$emit('update:currentPage', currentPage)\n\n      return true\n    },\n    revealPage (page) {\n      if (!this.pageSize || Number.isNaN(page) || page < 1) {\n        return\n      }\n\n      this.$emit('update:currentPage', page)\n    },\n    selectRow (row) {\n      this.store.selectRow(row)\n    },\n    selectRows (rows) {\n      this.store.selectRows(rows)\n    },\n    deselectRow (row) {\n      this.store.deselectRow(row)\n    },\n    deselectRows (rows) {\n      this.store.deselectRows(rows)\n    },\n    selectAll () {\n      if (this.selectionMode === 'single') return\n\n      this.store.selectAll(this.data)\n    },\n    deselectAll () {\n      this.store.deselectAll()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vuejs-smart-table/src"}]}