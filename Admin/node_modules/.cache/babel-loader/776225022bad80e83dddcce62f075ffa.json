{"remainingRequest":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/babel-loader/lib/index.js!/Users/mattiasronge/Desktop/richar/Admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mattiasronge/Desktop/richar/Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mattiasronge/Desktop/richar/Admin/node_modules/vuejs-smart-table/src/SmartPagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/vuejs-smart-table/src/SmartPagination.vue","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'SmartPagination',\n  props: {\n    currentPage: {\n      required: true,\n      type: Number\n    },\n    totalPages: {\n      required: true,\n      type: Number\n    },\n    hideSinglePage: {\n      required: false,\n      type: Boolean,\n      default: true\n    },\n    maxPageLinks: {\n      required: false,\n      type: Number\n    },\n    boundaryLinks: {\n      required: false,\n      type: Boolean,\n      default: false\n    },\n    firstText: {\n      required: false,\n      type: String,\n      default: 'First'\n    },\n    lastText: {\n      required: false,\n      type: String,\n      default: 'Last'\n    },\n    directionLinks: {\n      required: false,\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    displayPages: function displayPages() {\n      if (isNaN(this.maxPageLinks) || this.maxPageLinks <= 0) {\n        return this.displayAllPages();\n      } else {\n        return this.limitVisiblePages();\n      }\n    }\n  },\n  methods: {\n    displayAllPages: function displayAllPages() {\n      var displayPages = [];\n\n      for (var i = 1; i <= this.totalPages; i++) {\n        displayPages.push({\n          title: i.toString(),\n          value: i\n        });\n      }\n\n      return displayPages;\n    },\n    limitVisiblePages: function limitVisiblePages() {\n      var displayPages = [];\n      var totalTiers = Math.ceil(this.totalPages / this.maxPageLinks);\n      var activeTier = Math.ceil(this.currentPage / this.maxPageLinks);\n      var start = (activeTier - 1) * this.maxPageLinks + 1;\n      var end = start + this.maxPageLinks;\n\n      if (activeTier > 1) {\n        displayPages.push({\n          title: '...',\n          value: start - 1\n        });\n      }\n\n      for (var i = start; i < end; i++) {\n        if (i > this.totalPages) {\n          break;\n        }\n\n        displayPages.push({\n          title: i.toString(),\n          value: i\n        });\n      }\n\n      if (activeTier < totalTiers) {\n        displayPages.push({\n          title: '...',\n          value: end\n        });\n      }\n\n      return displayPages;\n    },\n    selectPage: function selectPage(page) {\n      if (page < 1 || page > this.totalPages || page === this.currentPage) {\n        return;\n      }\n\n      this.$emit('update:currentPage', page);\n    },\n    nextPage: function nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.$emit('update:currentPage', this.currentPage + 1);\n      }\n    },\n    previousPage: function previousPage() {\n      if (this.currentPage > 1) {\n        this.$emit('update:currentPage', this.currentPage - 1);\n      }\n    },\n    firstPage: function firstPage() {\n      this.$emit('update:currentPage', 1);\n    },\n    lastPage: function lastPage() {\n      this.$emit('update:currentPage', this.totalPages);\n    }\n  }\n};",{"version":3,"sources":["SmartPagination.vue"],"names":[],"mappings":"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","sourcesContent":["<template replaceable part=\"pagination\">\n  <nav v-show=\"!(hideSinglePage && totalPages === 1)\" class=\"smart-pagination\">\n    <ul class=\"pagination\">\n      <li :class=\"{'disabled': currentPage === 1}\" v-if=\"boundaryLinks\" class=\"page-item\">\n        <a href=\"javascript:void(0)\" aria-label=\"Previous\" @click=\"firstPage\" class=\"page-link\">\n          <span aria-hidden=\"true\" v-html=\"firstText\"></span>\n        </a>\n      </li>\n\n      <li :class=\"{'disabled': currentPage === 1}\" v-if=\"directionLinks\" class=\"page-item\">\n        <a href=\"javascript:void(0)\" aria-label=\"Previous\" @click=\"previousPage()\" class=\"page-link\">\n          <slot name=\"previousIcon\" :disabled=\"currentPage === 1\">\n            <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\n              <path fill=\"currentColor\"\n                    d=\"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\"></path>\n            </svg>\n          </slot>\n        </a>\n      </li>\n\n      <li\n        v-for=\"page in displayPages\"\n        :key=\"page.value\"\n        class=\"page-item\"\n        :class=\"{'active': currentPage === page.value}\"\n      >\n        <a href=\"javascript:void(0)\" @click=\"selectPage(page.value)\" class=\"page-link\">{{page.title}}</a>\n      </li>\n\n      <li :class=\"{'disabled': currentPage === totalPages}\" v-if=\"directionLinks\"\n          class=\"page-item\">\n        <a href=\"javascript:void(0)\" aria-label=\"Next\" @click=\"nextPage()\" class=\"page-link\">\n          <slot name=\"nextIcon\" :disabled=\"currentPage === totalPages\">\n            <svg width=\"16\" height=\"16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\n              <path fill=\"currentColor\"\n                    d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"></path>\n            </svg>\n          </slot>\n        </a>\n      </li>\n\n      <li :class=\"{'disabled': currentPage === totalPages}\" v-if=\"boundaryLinks\"\n          class=\"page-item\">\n        <a href=\"javascript:void(0)\" aria-label=\"Previous\" @click=\"lastPage()\" class=\"page-link\">\n          <span aria-hidden=\"true\" v-html=\"lastText\"></span>\n        </a>\n      </li>\n    </ul>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'SmartPagination',\n  props: {\n    currentPage: {\n      required: true,\n      type: Number\n    },\n    totalPages: {\n      required: true,\n      type: Number\n    },\n    hideSinglePage: {\n      required: false,\n      type: Boolean,\n      default: true\n    },\n    maxPageLinks: {\n      required: false,\n      type: Number\n    },\n    boundaryLinks: {\n      required: false,\n      type: Boolean,\n      default: false\n    },\n    firstText: {\n      required: false,\n      type: String,\n      default: 'First'\n    },\n    lastText: {\n      required: false,\n      type: String,\n      default: 'Last'\n    },\n    directionLinks: {\n      required: false,\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    displayPages () {\n      if (isNaN(this.maxPageLinks) || this.maxPageLinks <= 0) {\n        return this.displayAllPages()\n      } else {\n        return this.limitVisiblePages()\n      }\n    }\n  },\n  methods: {\n    displayAllPages () {\n      const displayPages = []\n\n      for (let i = 1; i <= this.totalPages; i++) {\n        displayPages.push({\n          title: i.toString(),\n          value: i\n        })\n      }\n      return displayPages\n    },\n    limitVisiblePages () {\n      const displayPages = []\n\n      const totalTiers = Math.ceil(this.totalPages / this.maxPageLinks)\n\n      const activeTier = Math.ceil(this.currentPage / this.maxPageLinks)\n\n      const start = ((activeTier - 1) * this.maxPageLinks) + 1\n      const end = start + this.maxPageLinks\n\n      if (activeTier > 1) {\n        displayPages.push({\n          title: '...',\n          value: start - 1\n        })\n      }\n\n      for (let i = start; i < end; i++) {\n        if (i > this.totalPages) {\n          break\n        }\n\n        displayPages.push({\n          title: i.toString(),\n          value: i\n        })\n      }\n\n      if (activeTier < totalTiers) {\n        displayPages.push({\n          title: '...',\n          value: end\n        })\n      }\n\n      return displayPages\n    },\n    selectPage (page) {\n      if (page < 1 || page > this.totalPages || page === this.currentPage) {\n        return\n      }\n\n      this.$emit('update:currentPage', page)\n    },\n    nextPage () {\n      if (this.currentPage < this.totalPages) {\n        this.$emit('update:currentPage', this.currentPage + 1)\n      }\n    },\n    previousPage () {\n      if (this.currentPage > 1) {\n        this.$emit('update:currentPage', this.currentPage - 1)\n      }\n    },\n    firstPage () {\n      this.$emit('update:currentPage', 1)\n    },\n    lastPage () {\n      this.$emit('update:currentPage', this.totalPages)\n    }\n  }\n}\n</script>\n\n<style>\n  .disabled svg {\n    color: grey;\n  }\n\n  .disabled a {\n    cursor: not-allowed\n  }\n</style>\n"],"sourceRoot":"node_modules/vuejs-smart-table/src"}]}