{"remainingRequest":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mattiasronge/Desktop/richar/Admin/src/pages/customer/customer_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mattiasronge/Desktop/richar/Admin/src/pages/customer/customer_list.vue","mtime":1577395332996},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattiasronge/Desktop/richar/Admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\n// Import the editor\nimport CKEditor from '@ckeditor/ckeditor5-vue';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport axios from 'axios';\nvar numeral = require(\"numeral\");\n\nexport default {\n  components: {\n    ckeditor: CKEditor.component,\n  },\n  data(){\n    return {\n      dropzoneOptions:{\n        url:process.env.VUE_APP_BACKEND_URL+'api/upload',\n        thumbnailWidth: 250,\n        thumbnailHeight: 140,\n        acceptedFiles: 'image/jpeg,image/png',\n        maxFiles:1,\n        maxFilesize: 2,\n        dictDefaultMessage:\"<i class='icon-cloud-up'></i><h6>Drop files here or click to upload.</h6>\"\n      },\n      editor: ClassicEditor,\n      perPage: 10,\n      pageOptions: [5, 10, 15],\n      totalRows: 1,\n      currentPage: 1,\n      api_currentPage:1,\n      filters: {\n        currentPage:1,\n        totalPages:1, \n        id: { value: '', keys: ['_id'] },\n        name: { value: '', keys: ['name'] },\n        email: { value: '', keys: ['email'] },\n        phone: { value: '', keys: ['phone'] },\n        message: { value: '', keys: ['message']}\n      }\n    }\n  },\n  filters: {\n      formatNumber(value) {\n          return numeral(value).format(\"0,0\"); // displaying other groupings/separators is possible, look at the docs\n      }\n  },\n  computed: {\n    ...mapState({\n      products: state => state.manual_product.products,\n      customers: state => state.customer.customers,\n      customer: state => state.customer.customer,\n      clientPage: state => state.customer.clientPage,\n      property_list: state => state.api.property_list,\n      product: state => state.api.product,\n      ref_keys: state => state.customer.ref_keys,\n      customer_ref_keys: state => state.customer.customer_ref_keys,\n      api_totalCount: state => state.api.totalCount,\n\t\t\tapi_totalPages: state => state.api.totalPages\n    })       \n  },\n  created() {\n    this.getCustomers();\n    this.getManualProducts();\n    this.getProperty_list();\n    this.getRefKeys();\n  }, \n  methods: {\n    send_email(email, url_key) {\n        axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n        axios.post(process.env.VUE_APP_BACKEND_URL+'api/sendEmail', {\n          to: email,\n          subject: \"From Homes API\",\n          html: \"<p>Now You have your own product page from API.</p><h3>You can access your page from </h3><p><a href='\"+process.env.VUE_APP_URL+\"#/client/\"+url_key+\"'>\"+process.env.VUE_APP_URL+\"#/client/\"+url_key+\"</a>.</p>\"\n        }).then((response) => {\n          if(response.data==true)\n            this.$toasted.show('The URL Key is sent to '+email+' successfully!', {theme: 'outline',position: \"top-center\", icon : 'info', type: 'info', duration: 3000});\n          else\n            this.$toasted.show('Email sent error from '+email, {theme: 'outline',position: \"top-center\", icon : 'danger', type: 'danger', duration: 3000});\n        });\n    },\n    saveAPIProduct(ref_key) {\n      if (this.$store.state.api.ref_keys.indexOf(ref_key) <0)\n      {\n        this.$store.state.api.product.api_id = 1;\n        this.$store.dispatch('api/getPropery', {id:ref_key});\n      }\n      let that = this;\n\t\t\tsetTimeout(function () {\n        that.$toasted.show('The product is saved successfully.', {theme: 'outline',position: \"top-center\", icon : 'info', type: 'info', duration: 3000});\n          axios.get(process.env.VUE_APP_BACKEND_URL+'api/productapiFromRef/'+ref_key).then(response => {\n          if (response.data)\n          {\n            that.$store.state.customer.clientPage.products_a_ids.push(response.data._id);\n          }\n          that.$store.state.customer.customer_ref_keys.push(ref_key);\n        });\n\t\t\t}, 2000);\n    },\n    removeAPIProduct(ref_key) {\n      axios.get(process.env.VUE_APP_BACKEND_URL+'api/productapiFromRef/'+ref_key).then(response => {\n        let products_a_ids = [];\n        this.$store.state.customer.clientPage.products_a_ids.forEach(item => {\n          if (item!=response.data._id)\n            products_a_ids.push(item);\n        });\n        this.$store.state.customer.clientPage.products_a_ids = products_a_ids;\n\n        let customer_ref_keys = [];\n        this.$store.state.customer.customer_ref_keys.forEach(item => {\n          if (item!=ref_key)\n            customer_ref_keys.push(item);\n        });\n        this.$store.state.customer.customer_ref_keys = customer_ref_keys;\n      });\n\t\t},\n    getRefKeys() {\n\t\t\tthis.$store.dispatch('customer/getRefKeys')\n    },\n    isSaved(ref) {\n\t\t\tif (this.$store.state.customer.customer_ref_keys.indexOf(ref) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n    getProperty_list() {\n\t\t\tlet f_types = ['1-1','2-1'];\n\t\t\tlet f_locations = ['Benahavis'];\n\t\t\tthis.$store.dispatch('api/getList', { page:this.api_currentPage, types: f_types, locations: f_locations, period: 1, bedrooms:0, baths:0, minPrice: 1000, maxPrice: 900000000 });\n\t\t},\n    isManualSaved(id) {\n\t\t\tif (this.$store.state.customer.clientPage.products_m_ids.indexOf(id) != -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n    },\n    addManual(m_id) {\n      let products_m_ids = [];\n      this.$store.state.customer.clientPage.products_m_ids.forEach(item => {\n        if (item!=m_id)\n          products_m_ids.push(item);\n      });\n      products_m_ids.push(m_id);\n      this.$store.state.customer.clientPage.products_m_ids = products_m_ids;\n      this.getManualProducts();\n    },\n    removeManual(m_id) {\n      let products_m_ids = [];\n      this.$store.state.customer.clientPage.products_m_ids.forEach(item => {\n        if (item!=m_id)\n          products_m_ids.push(item);\n      });\n      this.$store.state.customer.clientPage.products_m_ids = products_m_ids;\n      this.getManualProducts();\n    },\n    getManualProducts(){\n        this.$store.dispatch('manual_product/getProducts')\n    },\n    generateCustomPage(client_id, url_key) {\n      this.$store.dispatch('customer/getClientPage', {client: client_id, url_key: url_key});\n      this.$bvModal.show('modal-page');\n    },\n    focusMyElement() {\n      this.$refs.focusThis.focus()\n    },\n    resetModal() {\n      this.name = '';\n      this.nameState = null\n    },\n    saveCustomer(id) {\n      this.$store.dispatch('customer/saveCustomer', {id: id});\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.getCustomers();\n        this.$bvModal.hide('modal-customer');\n        this.$toasted.show('The customer is saved successfully.', {theme: 'outline',position: \"top-center\", icon : 'info', type: 'info', duration: 3000});\n      });\n    },\n    saveClientPage(client_id, url_key) {\n      this.$store.dispatch('customer/saveClientPage', {client: client_id, url_key: url_key});\n      this.$nextTick(() => {\n        this.getCustomers();\n        this.$bvModal.hide('modal-page');\n        this.$toasted.show('The customer Page is generated successfully.', {theme: 'outline',position: \"top-center\", icon : 'info', type: 'info', duration: 3000});\n      });\n    },\n    addRow() {\n      this.$store.dispatch('customer/emptyCustomer');\n      this.$bvModal.show('modal-customer');\n    },\n    editRow(id){\n      this.$store.dispatch('customer/getCustomer', {id: id});\n      this.$bvModal.show('modal-customer');\n    },\n    deleteRow(id, url_key){\n      this.$bvModal.msgBoxConfirm('Please confirm that you want to delete the Customer with ID: '+id, {\n        title: 'Please Confirm',\n        size: 'sm',\n        buttonSize: 'sm',\n        okVariant: 'danger',\n        okTitle: 'YES',\n        cancelTitle: 'NO',\n        footerClass: 'p-2',\n        hideHeaderClose: false,\n        centered: true\n      })\n      .then(value => {\n        if (value)\n        {\n          this.$store.dispatch('customer/deleteCustomer', {id: id, url_key:url_key});\n          this.$toasted.show('The customer is deleted successfully.', {theme: 'outline',position: \"top-center\", icon : 'times', type: 'error', duration: 3000});\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        // An error occurred\n      });\n    },\n    getCustomers(){\n        this.$store.dispatch('customer/getCustomers')\n    },\n  }\n}\n",{"version":3,"sources":["customer_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"customer_list.vue","sourceRoot":"src/pages/customer","sourcesContent":["<template>\n    <div>\n        <Breadcrumbs main=\"CustomerList\" title=\"Customer List\"/>\n        <!-- Container-fluid starts-->\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <div class=\"default-according style-1 faq-accordion job-accordion\">\n                    <b-card no-body>\n                      <b-card-header header-tag=\"div\" role=\"tab\">\n                        <h5 class=\"mb-0\">\n                          <b-button class=\"btn btn-link pl-0\" block v-b-toggle.collapseicon>Filter</b-button>\n                        </h5>\n                      </b-card-header>\n                      <b-collapse id=\"collapseicon\" visible role=\"tabpanel\">\n                        <b-card-body class=\"filter-cards-view animate-chk\">\n                          <div class=\"row mb-1\">\n                            <div class=\"col-md-6 col-lg-4\">\n                              <b-form-group label-cols-md=\"3\" label-align-md=\"right\" label=\"ID:\" label-for=\"filter-ref\">\n                                <b-form-input id=\"filter-id\" type=\"text\" class=\"form-control\" v-model=\"filters.id.value\" placeholder=\"ID value\"></b-form-input>\n                              </b-form-group>\n                            </div>\n                            <div class=\"col-md-6 col-lg-4\">\n                              <b-form-group label-cols-md=\"3\" label-align-md=\"right\" label=\"Name:\" label-for=\"filter-ref\">\n                                <b-form-input id=\"filter-name\" type=\"text\" class=\"form-control\" v-model=\"filters.name.value\" placeholder=\"Name\"></b-form-input>\n                              </b-form-group>\n                            </div>\n                            <div class=\"col-md-6 col-lg-4\">\n                              <b-form-group label-cols-md=\"3\" label-align-md=\"right\" label=\"Email:\" label-for=\"filter-email\">\n                                <b-form-input id=\"filter-email\" type=\"text\" class=\"form-control\" v-model=\"filters.email.value\" placeholder=\"Email\"></b-form-input>\n                              </b-form-group>\n                            </div>\n                          </div>\n                          <div class=\"row mb-1\">\n                            <div class=\"col-md-6 col-lg-4\">\n                              <b-form-group label-cols-md=\"3\" label-align-md=\"right\" label=\"phone:\" label-for=\"filter-ref\">\n                                <b-form-input id=\"filter-phone\" type=\"text\" class=\"form-control\" v-model=\"filters.phone.value\" placeholder=\"phone number\"></b-form-input>\n                              </b-form-group>\n                            </div>\n                            <div class=\"col-md-6 col-lg-8\">\n                              <b-form-group label-cols-md=\"2\" label-align-md=\"right\" label=\"Message:\" label-for=\"filter-ref\">\n                                <b-form-input id=\"filter-message\" type=\"text\" class=\"form-control\" v-model=\"filters.message.value\" placeholder=\"Message...\"></b-form-input>\n                              </b-form-group>\n                            </div>\n                          </div>\n                        </b-card-body>\n                      </b-collapse>\n                    </b-card>\n                  </div>\n                  <b-row>\n                    <b-col md=\"6\" class=\"add-datatable\">\n                      <b-button variant=\"success\" @click=\"addRow()\" class=\"mb-6\"><i class=\"icofont icofont-ui-add\"></i>&nbsp; Customer</b-button>\n                    </b-col>\n                    <b-col md=\"6\">\n                      <b-form-group label-cols=\"2\" label=\"Per page\" class=\"datatable-select\">\n                        <b-form-select v-model=\"perPage\" :options=\"pageOptions\"></b-form-select>\n                      </b-form-group>\n                    </b-col>\n                  </b-row>\n                </div>\n                <div class=\"card-body\" v-if=\"customers\">\n                  <div class=\"datatable-vue m-0\">\n                    <div class=\"table-responsive vue-smart\">\n                      <v-table\n                      :data=\"customers\" class=\"table\"\n                      :currentPage.sync=\"filters.currentPage\"\n                      :pageSize=\"perPage\"\n                      @totalPagesChanged=\"filters.totalPages = $event\"\n                      :filters=\"filters\"\n                      >\n                        <thead slot=\"head\">\n                          <v-th sortKey=\"_id\">ID</v-th>\n                          <v-th sortKey=\"name\">Name</v-th>\n                          <v-th sortKey=\"email\">Email</v-th>\n                          <v-th sortKey=\"phone\">Phone</v-th>\n                          <v-th sortKey=\"message\">:Message:</v-th>\n                          <v-th sortKey=\"_id\">Actions</v-th>\n                        </thead>\n                        <tbody slot=\"body\" slot-scope=\"{displayData}\">\n                          <tr v-for=\"row in displayData\" :key=\"row.id\">\n                            <td>{{ row._id }}</td>\n                            <td>{{ row.name }}</td>\n                            <td>{{ row.email }}</td>\n                            <td>{{ row.phone }}</td>\n                            <td><div v-html=\"row.message\"></div></td>\n                            <td>\n                              <a href=\"JavaScript:void(0);\" @click=\"editRow(row._id)\"><span class=\"text-primary\"><i class=\"fa fa-pencil f-18 sf-right\"></i></span></a> &nbsp; \n                              <a href=\"JavaScript:void(0);\" @click=\"generateCustomPage(row._id, row.url_key)\"><span class=\"text-info\"><i class=\"fa fa-cogs f-18 sf-right\"></i></span></a> &nbsp;\n                              <a href=\"JavaScript:void(0);\" @click=\"send_email(row.email, row.url_key)\"><span v-bind:class=\"[!row.url_key || row.url_key==''? 'text-white':'text-info']\"><i class=\"fa fa-envelope f-18 sf-right\"></i></span></a> &nbsp;\n                              <a href=\"JavaScript:void(0);\" @click=\"deleteRow(row._id, row.url_key)\"><span class=\"text-danger\"><i class=\"fa fa-trash f-18 sf-right\"></i></span></a>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </v-table>\n                    </div>\n                    <smart-pagination\n                    :currentPage.sync=\"filters.currentPage\"\n                    :totalPages=\"filters.totalPages\"/>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <b-modal id=\"modal-customer\" size=\"xl\" title=\"Save customer\" centered no-stacking hide-footer class=\"theme-modal\" @hidden=\"resetModal\" @shown=\"focusMyElement\">\n              <div class=\"container-fluid bd-example-row grid-showcase\" v-if=\"customer\">\n                <b-form ref=\"form\" class=\"needs-validation\" @submit.stop.prevent=\"saveCustomer(customer._id)\">\n                  <div class=\"form-row\">\n                    <div class=\"col-md-12 mb-3\">\n                        <label for=\"title\">Name:</label>\n                        <b-form-input type=\"text\" id=\"name\" ref=\"focusThis\" v-model=\"customer.name\" required placeholder=\"Name\"></b-form-input>\n                    </div>\n\t\t\t\t\t<div class=\"col-md-6 mb-3\">\n                        <label for=\"title\">Email:</label>\n                        <b-form-input type=\"text\" id=\"email\" v-model=\"customer.email\" required placeholder=\"Email\"></b-form-input>\n                    </div>\n\t\t\t\t\t<div class=\"col-md-6 mb-3\">\n                        <label for=\"title\">Phone:</label>\n                        <b-form-input type=\"text\" id=\"phone\" v-model=\"customer.phone\" required placeholder=\"Phone\"></b-form-input>\n                    </div>\n                    <div class=\"col-md-12 mb-3\">\n\t\t\t\t\t\t<label for=\"textarea\">Message:</label>\n\t\t\t\t\t\t<ckeditor :editor=\"editor\"  v-model=\"customer.message\"></ckeditor>\n                    </div>\n                  </div>\n                  <div class=\"form-row mb-4\">\n                    <b-button type=\"submit\" variant=\"primary\">Save</b-button>\n                  </div>\n                </b-form>\n              </div>\n            </b-modal>\n            <b-modal id=\"modal-page\" size=\"xl\" :title=\"'URL Key: '+clientPage.url_key\" centered no-stacking hide-footer class=\"theme-modal\" @hidden=\"resetModal\">\n              <div class=\"container-fluid\" v-if=\"clientPage\">\n                <b-form ref=\"form\" class=\"needs-validation\" @submit.stop.prevent=\"saveClientPage(clientPage.customer._id, clientPage.url_key)\">\n                  <div class=\"row\">\n                    <div class=\"col-12 xl-100\">\n                      <b-card header-tag=\"div\" no-body>\n                        <h5 slot=\"header\">Save Products</h5>\n                        <b-card-body>\n                          <b-tabs pills class=\"tabbed-card border-tab nav-success\">\n                            <b-tab title=\"Home\" active>\n                              <template slot=\"title\"><i class=\"fa fa-home\"></i>From API</template>\n                                <b-pagination-nav style=\"width: 100%;float: left;height: 50px;position: relative;\" :number-of-pages=\"api_totalPages\" v-model=\"api_currentPage\" :current-page=\"api_currentPage\" base-url=\"#\" @change=\"getProperty_list()\"></b-pagination-nav>\n                                <div class=\"card my-0\" style=\"width:100%\" v-for=\"(job,index) in property_list\" :key=\"index\">\n                                  <div v-if=\"isSaved(job.ref_key)\" class=\"ribbon ribbon-bookmark ribbon-vertical-left ribbon-warning\"><i class=\"icofont icofont-save\"></i></div>\n                                  <div class=\"row\" style=\"border-bottom:1px solid #ddd; padding:5px 0;\">\n                                      <div class=\"col-sm-12 col-md-6 col-lg-3\" v-if=\"job.images && job.images.length>0\">\n                                          <lingallery class=\"img-fluid m-r-20\" :height=\"180\" :width=\"210\" :mobileWidth=\"180\" :mobileHeight=\"180\" :showThumbnails=\"false\" :items=\"job.images\"/>\n                                      </div>\n                                      <div class=\"col-sm-12 col-md-6 col-lg-9\">\n                                          <h5 class=\"f-w-600\">\n                                              <router-link :to=\"{ name: 'PropertyDetails', params: { id: job.ref_key }}\">{{ job.title }}</router-link>\n                                          </h5>\n                                          <p class=\"mb-0\">€<span>{{job.Price | formatNumber}}</span></p>\n                                          <p class=\"mb-0\"><b>Location:</b> {{ job.Area }}, <span>{{ job.Location }}, {{ job.Location }} </span></p>\n                                          <p class=\"mb-0\"><b>Inside:</b> <span class=\"pr-4\" v-if=\"job.Built && job.Built>0\">{{job.Built}}m²</span> <b>Outside:</b> <span v-if=\"job.GardenPlot && job.GardenPlot>0\">{{job.GardenPlot}}m²</span></p>\n                                          <p class=\"mb-0\"><span><i class=\"icofont icofont-bed\"></i>: <b>{{ job.Bedrooms }}</b></span> <span><i class=\"icofont icofont-bathtub\"></i>: <b>{{ job.Bathrooms }}</b></span></p>\n                                          <p class=\"mb-0\">\n                                            <button v-show=\"isSaved(job.ref_key)\" class=\"btn btn-danger mr-3 pull-right\" type=\"button\" @click=\"removeAPIProduct(job.ref_key)\"><i class=\"fa fa-trash\"></i></button>\n                                            <button v-show=\"!isSaved(job.ref_key)\" class=\"btn btn-secondary mr-3 pull-right\" type=\"button\" @click=\"saveAPIProduct(job.ref_key)\"><i class=\"fa fa-save\"></i></button>\n                                          </p>\n                                      </div>\n                                  </div>\n                                </div>\n                            </b-tab>\n                            <b-tab title=\"Profile\">\n                              <template slot=\"title\"><i class=\"fa fa-box\"></i>Manual products</template>\n                              <b-card-text>\n                                <div class=\"datatable-vue m-0\">\n                                  <div class=\"table-responsive vue-smart\">\n                                    <v-table\n                                    :data=\"products\" class=\"table\"\n                                    :pageSize=\"perPage\"\n                                    >\n                                      <thead slot=\"head\">\n                                        <v-th sortKey=\"ref_key\">Ref</v-th>\n                                        <v-th sortKey=\"title\">Title</v-th>\n                                        <v-th sortKey=\"type.title\">type</v-th>\n                                        <v-th sortKey=\"location.title\">location</v-th>\n                                        <v-th sortKey=\"area.title\">area</v-th>\n                                        <v-th sortKey=\"price\">Price</v-th>\n                                        <v-th sortKey=\"bedroom\">bedroom</v-th>\n                                        <v-th sortKey=\"bathroom\">bathroom</v-th>\n                                        <v-th sortKey=\"square\">Square</v-th>\n                                        <v-th sortKey=\"outside\">Outside</v-th>\n                                        <v-th sortKey=\"_id\">Actions</v-th>\n                                      </thead>\n                                      <tbody slot=\"body\" slot-scope=\"{displayData}\">\n                                            <tr v-for=\"row in displayData\" :key=\"row._id\">\n                                              <td style=\"position:relative\">\n                                              <div v-if=\"isManualSaved(row._id)\" class=\"ribbon ribbon-bookmark ribbon-vertical-left ribbon-warning\"><i class=\"icofont icofont-save\"></i></div>\n                                              {{ row.ref_key }}\n                                              </td>\n                                              <td>\n                                                <div class=\"row\">\n                                                  <div class=\"col-12\">\n                                                    <img v-lazy=\"row.images[0]\"/>\n                                                  </div>\n                                                  <div class=\"col-12\">\n                                                    <p>{{ row.title }}</p>\n                                                  </div>\n                                                </div>\n                                              </td>\n                                              <td>{{ row.type.title }}</td>\n                                              <td>{{ row.location.title }}</td>\n                                              <td>{{ row.area.title }}</td>\n                                              <td>{{ row.price }}</td>\n                                              <td>{{ row.bedroom }}</td>\n                                              <td>{{ row.bathroom }}</td>\n                                              <td>{{ row.square }}</td>\n                                              <td>{{ row.outside }}</td>\n                                              <td>\n                                                <a href=\"JavaScript:void(0);\" v-show=\"!isManualSaved(row._id)\" @click=\"addManual(row._id)\"><span class=\"text-info\"><i class=\"fa fa-save f-18 sf-right\"></i></span></a> &nbsp; \n                                                <a href=\"JavaScript:void(0);\" v-show=\"isManualSaved(row._id)\" @click=\"removeManual(row._id)\"><span class=\"text-danger\"><i class=\"fa fa-trash f-18 sf-right\"></i></span></a>\n                                              </td>\n                                            </tr>\n                                          </tbody>\n                                        </v-table>\n                                      </div>\n                                      <smart-pagination\n                                      :currentPage.sync=\"filters.currentPage\"\n                                      :totalPages=\"filters.totalPages\"/>\n                                </div>\n                              </b-card-text>\n                            </b-tab>\n                          </b-tabs>\n                        </b-card-body>\n                      </b-card>\n                    </div>\n                  </div>\n                  <div class=\"form-row mb-4\">\n                    <b-button type=\"submit\" variant=\"primary\">Save</b-button>\n                  </div>\n                </b-form>\n              </div>\n            </b-modal>\n          </div>\n        </div>\n        <!-- Container-fluid Ends-->\n    </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n// Import the editor\nimport CKEditor from '@ckeditor/ckeditor5-vue';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport axios from 'axios';\nvar numeral = require(\"numeral\");\n\nexport default {\n  components: {\n    ckeditor: CKEditor.component,\n  },\n  data(){\n    return {\n      dropzoneOptions:{\n        url:process.env.VUE_APP_BACKEND_URL+'api/upload',\n        thumbnailWidth: 250,\n        thumbnailHeight: 140,\n        acceptedFiles: 'image/jpeg,image/png',\n        maxFiles:1,\n        maxFilesize: 2,\n        dictDefaultMessage:\"<i class='icon-cloud-up'></i><h6>Drop files here or click to upload.</h6>\"\n      },\n      editor: ClassicEditor,\n      perPage: 10,\n      pageOptions: [5, 10, 15],\n      totalRows: 1,\n      currentPage: 1,\n      api_currentPage:1,\n      filters: {\n        currentPage:1,\n        totalPages:1, \n        id: { value: '', keys: ['_id'] },\n        name: { value: '', keys: ['name'] },\n        email: { value: '', keys: ['email'] },\n        phone: { value: '', keys: ['phone'] },\n        message: { value: '', keys: ['message']}\n      }\n    }\n  },\n  filters: {\n      formatNumber(value) {\n          return numeral(value).format(\"0,0\"); // displaying other groupings/separators is possible, look at the docs\n      }\n  },\n  computed: {\n    ...mapState({\n      products: state => state.manual_product.products,\n      customers: state => state.customer.customers,\n      customer: state => state.customer.customer,\n      clientPage: state => state.customer.clientPage,\n      property_list: state => state.api.property_list,\n      product: state => state.api.product,\n      ref_keys: state => state.customer.ref_keys,\n      customer_ref_keys: state => state.customer.customer_ref_keys,\n      api_totalCount: state => state.api.totalCount,\n\t\t\tapi_totalPages: state => state.api.totalPages\n    })       \n  },\n  created() {\n    this.getCustomers();\n    this.getManualProducts();\n    this.getProperty_list();\n    this.getRefKeys();\n  }, \n  methods: {\n    send_email(email, url_key) {\n        axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n        axios.post(process.env.VUE_APP_BACKEND_URL+'api/sendEmail', {\n          to: email,\n          subject: \"From Homes API\",\n          html: \"<p>Now You have your own product page from API.</p><h3>You can access your page from </h3><p><a href='\"+process.env.VUE_APP_URL+\"#/client/\"+url_key+\"'>\"+process.env.VUE_APP_URL+\"#/client/\"+url_key+\"</a>.</p>\"\n        }).then((response) => {\n          if(response.data==true)\n            this.$toasted.show('The URL Key is sent to '+email+' successfully!', {theme: 'outline',position: \"top-center\", icon : 'info', type: 'info', duration: 3000});\n          else\n            this.$toasted.show('Email sent error from '+email, {theme: 'outline',position: \"top-center\", icon : 'danger', type: 'danger', duration: 3000});\n        });\n    },\n    saveAPIProduct(ref_key) {\n      if (this.$store.state.api.ref_keys.indexOf(ref_key) <0)\n      {\n        this.$store.state.api.product.api_id = 1;\n        this.$store.dispatch('api/getPropery', {id:ref_key});\n      }\n      let that = this;\n\t\t\tsetTimeout(function () {\n        that.$toasted.show('The product is saved successfully.', {theme: 'outline',position: \"top-center\", icon : 'info', type: 'info', duration: 3000});\n          axios.get(process.env.VUE_APP_BACKEND_URL+'api/productapiFromRef/'+ref_key).then(response => {\n          if (response.data)\n          {\n            that.$store.state.customer.clientPage.products_a_ids.push(response.data._id);\n          }\n          that.$store.state.customer.customer_ref_keys.push(ref_key);\n        });\n\t\t\t}, 2000);\n    },\n    removeAPIProduct(ref_key) {\n      axios.get(process.env.VUE_APP_BACKEND_URL+'api/productapiFromRef/'+ref_key).then(response => {\n        let products_a_ids = [];\n        this.$store.state.customer.clientPage.products_a_ids.forEach(item => {\n          if (item!=response.data._id)\n            products_a_ids.push(item);\n        });\n        this.$store.state.customer.clientPage.products_a_ids = products_a_ids;\n\n        let customer_ref_keys = [];\n        this.$store.state.customer.customer_ref_keys.forEach(item => {\n          if (item!=ref_key)\n            customer_ref_keys.push(item);\n        });\n        this.$store.state.customer.customer_ref_keys = customer_ref_keys;\n      });\n\t\t},\n    getRefKeys() {\n\t\t\tthis.$store.dispatch('customer/getRefKeys')\n    },\n    isSaved(ref) {\n\t\t\tif (this.$store.state.customer.customer_ref_keys.indexOf(ref) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n    getProperty_list() {\n\t\t\tlet f_types = ['1-1','2-1'];\n\t\t\tlet f_locations = ['Benahavis'];\n\t\t\tthis.$store.dispatch('api/getList', { page:this.api_currentPage, types: f_types, locations: f_locations, period: 1, bedrooms:0, baths:0, minPrice: 1000, maxPrice: 900000000 });\n\t\t},\n    isManualSaved(id) {\n\t\t\tif (this.$store.state.customer.clientPage.products_m_ids.indexOf(id) != -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n    },\n    addManual(m_id) {\n      let products_m_ids = [];\n      this.$store.state.customer.clientPage.products_m_ids.forEach(item => {\n        if (item!=m_id)\n          products_m_ids.push(item);\n      });\n      products_m_ids.push(m_id);\n      this.$store.state.customer.clientPage.products_m_ids = products_m_ids;\n      this.getManualProducts();\n    },\n    removeManual(m_id) {\n      let products_m_ids = [];\n      this.$store.state.customer.clientPage.products_m_ids.forEach(item => {\n        if (item!=m_id)\n          products_m_ids.push(item);\n      });\n      this.$store.state.customer.clientPage.products_m_ids = products_m_ids;\n      this.getManualProducts();\n    },\n    getManualProducts(){\n        this.$store.dispatch('manual_product/getProducts')\n    },\n    generateCustomPage(client_id, url_key) {\n      this.$store.dispatch('customer/getClientPage', {client: client_id, url_key: url_key});\n      this.$bvModal.show('modal-page');\n    },\n    focusMyElement() {\n      this.$refs.focusThis.focus()\n    },\n    resetModal() {\n      this.name = '';\n      this.nameState = null\n    },\n    saveCustomer(id) {\n      this.$store.dispatch('customer/saveCustomer', {id: id});\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.getCustomers();\n        this.$bvModal.hide('modal-customer');\n        this.$toasted.show('The customer is saved successfully.', {theme: 'outline',position: \"top-center\", icon : 'info', type: 'info', duration: 3000});\n      });\n    },\n    saveClientPage(client_id, url_key) {\n      this.$store.dispatch('customer/saveClientPage', {client: client_id, url_key: url_key});\n      this.$nextTick(() => {\n        this.getCustomers();\n        this.$bvModal.hide('modal-page');\n        this.$toasted.show('The customer Page is generated successfully.', {theme: 'outline',position: \"top-center\", icon : 'info', type: 'info', duration: 3000});\n      });\n    },\n    addRow() {\n      this.$store.dispatch('customer/emptyCustomer');\n      this.$bvModal.show('modal-customer');\n    },\n    editRow(id){\n      this.$store.dispatch('customer/getCustomer', {id: id});\n      this.$bvModal.show('modal-customer');\n    },\n    deleteRow(id, url_key){\n      this.$bvModal.msgBoxConfirm('Please confirm that you want to delete the Customer with ID: '+id, {\n        title: 'Please Confirm',\n        size: 'sm',\n        buttonSize: 'sm',\n        okVariant: 'danger',\n        okTitle: 'YES',\n        cancelTitle: 'NO',\n        footerClass: 'p-2',\n        hideHeaderClose: false,\n        centered: true\n      })\n      .then(value => {\n        if (value)\n        {\n          this.$store.dispatch('customer/deleteCustomer', {id: id, url_key:url_key});\n          this.$toasted.show('The customer is deleted successfully.', {theme: 'outline',position: \"top-center\", icon : 'times', type: 'error', duration: 3000});\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        // An error occurred\n      });\n    },\n    getCustomers(){\n        this.$store.dispatch('customer/getCustomers')\n    },\n  }\n}\n</script>\n<style>\n.img-thumbs {\n  width:100%;\n}\n.img-thumb {\n  list-style: none;\n  width:20%;\n  padding:3px;\n  border:1px solid #ddd;\n  float:left;\n  position: relative;\n}\n.img-thumb img {\n  width:100%;\n  height:100%;\n}\n.img-thumb a {\n  position: absolute;\n  top:4px;\n  right:4px;\n}\n.dropzone .dz-preview {\n  width: 160px;\n}\n.vue-dropzone .dz-preview .dz-image {\n  width:120px;\n}\n.vue-dropzone .dz-preview .dz-image img {\n  width: 135px;\n  height: 110px;\n}\n.vue-dropzone a.dz-remove {\n  cursor: pointer;\n}\n.vue-dropzone a.dz-remove:hover {\n  color: #F96332 !important;\n}\n</style>"]}]}